using KPMG.Dynamics365.AutomationHelper;
using Microsoft.Dynamics365.UIAutomation.Api.UCI;
using Microsoft.Dynamics365.UIAutomation.Browser;
using OpenQA.Selenium;
using System;
using static KPMG.Dynamics365.UIAutomation.DTOs.Reference;

namespace KPMG.Dynamics365.UIAutomation.Test_Cases.Lead
{
    public class LeadHelper
    {
        private XrmApp xrmApp;
        private IWebDriver win;
        private WebClient client;
        private KPMGHelper KPMG_Helper;

        public LeadHelper(BaseAutomationClass baseAutomation)
        {
            this.client = baseAutomation.Client;
            this.xrmApp = baseAutomation.XrmApp;
            this.win = baseAutomation.Win;
            this.KPMG_Helper = baseAutomation.KPMG_Helper;
        }

        /// <summary>
        /// associate a new client need to lead and identify whether this should be deactivated.
        /// </summary>
        public void AddRelatedClientNeed(string serviceLine, bool deactivateRecord)
        {
            xrmApp.Entity.SelectTab("Client Needs");

            xrmApp.Entity.SubGrid.ClickCommand("Subgrid_2", "New Lead Client Need");

            xrmApp.Entity.SetValue(new LookupItem { Name = "kpmg_serviceline", Value = serviceLine });

            //if the client need to be activated, click save, deactivate, then go back to the lead form.
            //Otherwise save and close the client need form.
            if (deactivateRecord)
            {
                //used instead of xrmApp.Entity.Save() as it's causing an issue where the queue name is not entered in search
                xrmApp.CommandBar.ClickCommand("Save");

                xrmApp.CommandBar.ClickCommand("Deactivate");
                xrmApp.Dialogs.SetStateDialog(true);

                xrmApp.Navigation.GoBack();
            }
            else
            {
                xrmApp.CommandBar.ClickCommand("Save & Close");
            }
        }

        /// <summary>
        /// Search for queue by name and add lead to the selected queue.
        /// </summary>
        public void AddToQueue(string queueName)
        {
            //the OOB method is not working for commands under the more commands in main form.

            KPMG_Helper.Ribbon.ClickMoreCommands();

            string addToQueueButton = "//*[contains(@id,'lead|NoRelationship|Form|kpmg.lead.Command24.AddToLeadQueue')]";
            win.WaitUntilAvailable(By.XPath(addToQueueButton), TimeSpan.FromSeconds(15)).Click();

            //search for the queue
            string queueInput = "//section[contains(@data-id,'lookupDialogRoot')]//input[@placeholder='Look for Queue']";
            win.WaitUntilAvailable(By.XPath(queueInput), TimeSpan.FromSeconds(15)).SendKeys(queueName);

            //select the queue from the search results
            string searchResult = String.Format("//*[contains(@aria-label,'{0}')]", queueName);
            win.WaitUntilAvailable(By.XPath(searchResult), TimeSpan.FromSeconds(15)).Click();
            string selectedQueue = String.Format("//div[@title='{0}']", queueName);
            win.WaitUntilAvailable(By.XPath(selectedQueue), TimeSpan.FromSeconds(15));

            //click add button in add to queue dialog
            string addButtonId = "lookupDialogSaveBtn";
            win.WaitUntilClickable(By.Id(addButtonId), TimeSpan.FromSeconds(15)).Click();

            //click ok in the add to queue confirmation alert.
            string addToQueueConfirmaton = "//*[contains(@id,'okButton')]";
            win.WaitUntilClickable(By.XPath(addToQueueConfirmaton), TimeSpan.FromSeconds(15)).Click();
        }

        /// <summary>
        /// Search for queue item by lead name and assign it to the current user.
        /// </summary>
        public void PickQueueItem(string leadName, string appName)
        {
            //navigate to subarea based on app type
            if (appName.IsValueEqualsTo(DTOs.Reference.KPMGAppName.Admin_Sales))
            {
                xrmApp.Navigation.OpenSubArea(KPMG_AppArea_Sale.Clients, KPMG_AppArea_Sale.QueueItems);
            }
            else
            {
                xrmApp.Navigation.OpenSubArea(KPMG_AppArea_Sale.Title, KPMG_AppArea_Sale.QueueItems);
            }

            //select all items view
            xrmApp.Grid.SwitchView("All Items");

            xrmApp.Grid.Search(leadName, true);

            xrmApp.Grid.HighLightRecord(0);
            xrmApp.CommandBar.ClickCommand("Pick");

            var pickConfirmation = "//div[@role='dialog']//button[@aria-label='Pick']";
            win.WaitUntilClickable(By.XPath(pickConfirmation), TimeSpan.FromSeconds(15)).Click();
        }

        /// <summary>
        /// Search for tags by name and add the selected tags to lead.
        /// </summary>
        public void AddTag(string tagName)
        {
            xrmApp.ThinkTime(3000);

            //click the add tag button
            string addTagButton = "addTag";
            win.WaitUntilAvailable(By.Id(addTagButton), TimeSpan.FromSeconds(10)).Click();

            //search for tag to be added to lead
            string tagInput = "//section[contains(@data-id,'lookupDialogRoot')]//input[@title = 'Select to enter data']";
            win.WaitUntilAvailable(By.XPath(tagInput), TimeSpan.FromSeconds(10)).SendKeys(tagName);

            xrmApp.ThinkTime(3000);     //wait for the tag search results to be returned

            //select the tag from the search results.
            string searchResult = string.Format("//li[@aria-label='{0}']", tagName);
            win.WaitUntilAvailable(By.XPath(searchResult), TimeSpan.FromSeconds(10)).Click();
            string selectedTag = string.Format("//div[@title='{0}']", tagName);
            win.WaitUntilAvailable(By.XPath(selectedTag), TimeSpan.FromSeconds(10));
            xrmApp.ThinkTime(3000);

            //click add button
            win.WaitUntilClickable(By.Id("lookupDialogSaveBtn"), TimeSpan.FromSeconds(10)).Click();
        }

        /// <summary>
        /// Create other involved parties for opportunity.
        /// </summary>
        public void CreateOtherInvolvedParty(string appName)
        {
            xrmApp.Entity.SelectTab("Other Involved Parties");

            string subgridName = string.Empty;

            //set the subgrid name based on app
            if (appName.IsValueEqualsTo(DTOs.Reference.KPMGAppName.Admin_Sales))
            {
                subgridName = "OtherEngagingParties";
            }
            else
            {
                subgridName = "Subgrid_2";
            }

            xrmApp.Entity.SubGrid.ClickCommand(subgridName, "New Other Involved Party");

            xrmApp.Entity.SetValue(new LookupItem { Name = "kpmg_sentinelpartytype", Value = "Alliance Partner" });
            xrmApp.Entity.SetValue(new LookupItem { Name = "kpmg_account", Value = "A5 S" });

            xrmApp.CommandBar.ClickCommand("Save & Close");
        }
    }
}
